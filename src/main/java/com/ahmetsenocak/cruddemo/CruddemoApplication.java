package com.ahmetsenocak.cruddemo;

import com.ahmetsenocak.cruddemo.dao.StudentDAO;
import com.ahmetsenocak.cruddemo.dao.StudentDAOImpl;
import com.ahmetsenocak.cruddemo.entity.Student;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import java.util.List;

@SpringBootApplication
public class CruddemoApplication {

    public static void main(String[] args) {
        SpringApplication.run(CruddemoApplication.class, args);
    }

    @Bean
    public CommandLineRunner commandLineRunner(StudentDAO studentDAO) {
        return runner -> {
            //createStudent(studentDAO);
            //createMultipleStudent(studentDAO);
            //readStudent(studentDAO);
            //queryForStudent(studentDAO);
            //queryFindByLastName(studentDAO);
            //updateStudent(studentDAO);
            deleteStudent(studentDAO);
        };
    }

    private void deleteStudent(StudentDAO studentDAO) {
        int studentId = 6;
        System.out.println("Student removing from db " + studentId);
        studentDAO.delete(studentId);
    }

    private void updateStudent(StudentDAO studentDAO) {
        //retrieve student based on id : primary key
        int studentId = 1;
        System.out.println("Getting student with an ID " + studentId);
        Student myStudent = studentDAO.findById(studentId);

        // update the student
        System.out.println("Updating the Student");
        myStudent.setFirstName("Ahmet");

        // Save to the DB
        studentDAO.update(myStudent);

        //display student
        System.out.println("Updated student name is " + myStudent);
    }

    private void queryFindByLastName(StudentDAO studentDAO) {
        //get a student by lastName
        List<Student> theStudent = studentDAO.findLastName("Sen");

        for (Student tempStudent : theStudent) {
            System.out.println(tempStudent);
        }

    }

    private void queryForStudent(StudentDAO studentDAO) {

        // get a list of student
        List<Student> theStudent = studentDAO.findAll();

        // display list of student
        for (Student tempStudent : theStudent) {
            System.out.println(tempStudent);
        }

    }

    private void readStudent(StudentDAO studentDAO) {
        // create student object
        System.out.println("Creating new student object");
        Student tempStudent = new Student("Sasha", "Sen", "sasha@gmail.com");

        // saving the student object
        System.out.println("Saving the student object to DB");
        studentDAO.save(tempStudent);

        // find student by id(primary key)
        int findId = tempStudent.getId();
        Student myStudent = studentDAO.findById(findId);

        // display student
        System.out.println("The given id found: " + myStudent);
    }

    private void createMultipleStudent(StudentDAO studentDAO) {
        // create the student object
        System.out.println("Creating new student object...");
        Student tempStudent1 = new Student("Zihni", "Senocak", "Zihni@gmail.com");
        Student tempStudent2 = new Student("Zehra", "Senocak", "Zehra@gmail.com");
        Student tempStudent3 = new Student("Serhat", "Senocak", "Serhat@gmail.com");
        Student tempStudent4 = new Student("Serhat", "Senocak", "Serhat@gmail.com");

        // saving the student object
        System.out.println("Saving all student object to the db");
        studentDAO.save(tempStudent1);
        studentDAO.save(tempStudent2);
        studentDAO.save(tempStudent3);
        studentDAO.save(tempStudent4);


    }

    private void createStudent(StudentDAO studentDAO) {

        // create the student object
        System.out.println("Creating new student object...");
        Student tempStudent = new Student("Ahmet", "Senocak", "ahmet@gmail.com");

        // save the student object
        System.out.println("Saving the Student...");
        studentDAO.save(tempStudent);

        // display the student id
        System.out.println("Saved student: generated by id:" + tempStudent.getId());
    }

}
